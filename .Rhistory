movies <-left_join(x = gross, y = movies, by = "director_name")
movies <- movies %>% dplyr::select(director_name, actor_1_name, actor_2_name, actor_3_name)
movies <- movies[complete.cases(movies), ]
movie_edges <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
# id, label
movie_vertices <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
movie_edges <- setNames(movie_edges, c("from","to"))
movie_vertices <- setNames(movie_edges, c("label","id"))
for(i in 1:nrow(movies)) {
movie <- movies[i,]
director <- movie$director_name
actor1 <- movie$actor_1_name
actor2 <- movie$actor_2_name
actor3 <- movie$actor_3_name
if (!director %in% movie_vertices$label){
movie_vertices[nrow(movie_vertices) + 1,] = c(director, nrow(movie_vertices) + 1)
}
if (!actor1 %in% movie_vertices$label){
movie_vertices[nrow(movie_vertices) + 1,] = c(actor1, nrow(movie_vertices) + 1)
}
if (!actor2 %in% movie_vertices$label){
movie_vertices[nrow(movie_vertices) + 1,] = c(actor2, nrow(movie_vertices) + 1)
}
if (!actor3 %in% movie_vertices$label){
movie_vertices[nrow(movie_vertices) + 1,] = c(actor3, nrow(movie_vertices) + 1)
}
movie_edges[nrow(movie_edges) + 1,] = c(movie_vertices[movie_vertices$label == director, 2],
movie_vertices[movie_vertices$label == actor1, 2])
movie_edges[nrow(movie_edges) + 1,] = c(movie_vertices[movie_vertices$label == director, 2],
movie_vertices[movie_vertices$label == actor2, 2])
movie_edges[nrow(movie_edges) + 1,] = c(movie_vertices[movie_vertices$label == director, 2],
movie_vertices[movie_vertices$label == actor3, 2])
}
visNetwork(movie_vertices, movie_edges, width = "100%")
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(networkD3)
library(tidyverse)
library(visNetwork)
movies <- read_csv("imdb.csv")
grossing <- movies %>% dplyr::select(director_name, gross)
grossing <- grossing[complete.cases(grossing), ]
avg_gross <- grossing %>% group_by(director_name) %>%
dplyr::summarise(mean_gross = mean(gross))
gross  <- avg_gross[order(avg_gross$mean_gross,decreasing = TRUE),]
gross <- head(gross, n = 30)
movies <- movies %>% dplyr::select(director_name, actor_1_name, actor_2_name, actor_3_name)
movies <-left_join(x = gross, y = movies, by = "director_name")
movies <- movies %>% dplyr::select(director_name, actor_1_name, actor_2_name, actor_3_name)
movies <- movies[complete.cases(movies), ]
movie_edges <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
# id, label
movie_vertices <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
movie_edges <- setNames(movie_edges, c("from","to"))
movie_vertices <- setNames(movie_edges, c("label","id"))
for(i in 1:nrow(movies)) {
movie <- movies[i,]
director <- movie$director_name
actor1 <- movie$actor_1_name
actor2 <- movie$actor_2_name
actor3 <- movie$actor_3_name
if (!director %in% movie_vertices$label){
movie_vertices[nrow(movie_vertices) + 1,] = c(director, nrow(movie_vertices) + 1)
}
if (!actor1 %in% movie_vertices$label){
movie_vertices[nrow(movie_vertices) + 1,] = c(actor1, nrow(movie_vertices) + 1)
}
if (!actor2 %in% movie_vertices$label){
movie_vertices[nrow(movie_vertices) + 1,] = c(actor2, nrow(movie_vertices) + 1)
}
if (!actor3 %in% movie_vertices$label){
movie_vertices[nrow(movie_vertices) + 1,] = c(actor3, nrow(movie_vertices) + 1)
}
movie_edges[nrow(movie_edges) + 1,] = c(movie_vertices[movie_vertices$label == director, 2],
movie_vertices[movie_vertices$label == actor1, 2])
movie_edges[nrow(movie_edges) + 1,] = c(movie_vertices[movie_vertices$label == director, 2],
movie_vertices[movie_vertices$label == actor2, 2])
movie_edges[nrow(movie_edges) + 1,] = c(movie_vertices[movie_vertices$label == director, 2],
movie_vertices[movie_vertices$label == actor3, 2])
}
visNetwork(movie_vertices, movie_edges, width = "100%")
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(networkD3)
library(tidyverse)
library(visNetwork)
movies <- read_csv("imdb.csv")
grossing <- movies %>% dplyr::select(director_name, gross)
grossing <- grossing[complete.cases(grossing), ]
avg_gross <- grossing %>% group_by(director_name) %>%
dplyr::summarise(mean_gross = mean(gross))
gross  <- avg_gross[order(avg_gross$mean_gross,decreasing = TRUE),]
gross <- head(gross, n = 40)
movies <- movies %>% dplyr::select(director_name, actor_1_name, actor_2_name, actor_3_name)
movies <-left_join(x = gross, y = movies, by = "director_name")
movies <- movies %>% dplyr::select(director_name, actor_1_name, actor_2_name, actor_3_name)
movies <- movies[complete.cases(movies), ]
movie_edges <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
# id, label
movie_vertices <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
movie_edges <- setNames(movie_edges, c("from","to"))
movie_vertices <- setNames(movie_edges, c("label","id"))
for(i in 1:nrow(movies)) {
movie <- movies[i,]
director <- movie$director_name
actor1 <- movie$actor_1_name
actor2 <- movie$actor_2_name
actor3 <- movie$actor_3_name
if (!director %in% movie_vertices$label){
movie_vertices[nrow(movie_vertices) + 1,] = c(director, nrow(movie_vertices) + 1)
}
if (!actor1 %in% movie_vertices$label){
movie_vertices[nrow(movie_vertices) + 1,] = c(actor1, nrow(movie_vertices) + 1)
}
if (!actor2 %in% movie_vertices$label){
movie_vertices[nrow(movie_vertices) + 1,] = c(actor2, nrow(movie_vertices) + 1)
}
if (!actor3 %in% movie_vertices$label){
movie_vertices[nrow(movie_vertices) + 1,] = c(actor3, nrow(movie_vertices) + 1)
}
movie_edges[nrow(movie_edges) + 1,] = c(movie_vertices[movie_vertices$label == director, 2],
movie_vertices[movie_vertices$label == actor1, 2])
movie_edges[nrow(movie_edges) + 1,] = c(movie_vertices[movie_vertices$label == director, 2],
movie_vertices[movie_vertices$label == actor2, 2])
movie_edges[nrow(movie_edges) + 1,] = c(movie_vertices[movie_vertices$label == director, 2],
movie_vertices[movie_vertices$label == actor3, 2])
}
visNetwork(movie_vertices, movie_edges, width = "100%")
shiny::runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
?visNetworkOutput
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
?box
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
?box
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
?fluidPage
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
?renderVisNetwork
runApp('~/Documents/GitHub/315_m17_interactive_project')
?renderVisNetwork
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(tidyverse)
library(visNetwork)
movies <- read_csv("imdb.csv")
ggplot(movies, aes(x = budget, y = duration)) + geom_point()
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(tidyverse)
library(visNetwork)
movies <- read_csv("imdb.csv")
p <- ggplot(movies, aes(x = budget, y = duration)) + geom_point()
p
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(tidyverse)
library(visNetwork)
movies <- read_csv("imdb.csv")
p <- ggplot(movies, aes(x = duration, y = budget)) + geom_point()
p
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(tidyverse)
library(visNetwork)
movies <- read_csv("imdb.csv")
p <- ggplot(movies, aes(x = gross, y = budget)) + geom_point()
p
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(tidyverse)
library(visNetwork)
movies <- read_csv("imdb.csv")
p <- ggplot(movies, aes(x = budget, y = gross)) + geom_point()
p
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(tidyverse)
library(visNetwork)
movies <- read_csv("imdb.csv")
p <- ggplot(movies, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~ title_year)
p
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(tidyverse)
library(visNetwork)
movies <- read_csv("imdb.csv")
p <- ggplot(movies, aes(x = budget, y = gross)) + geom_point(aes(color = title_year))
p
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(tidyverse)
library(visNetwork)
movies <- read_csv("imdb.csv")
p <- ggplot(movies, aes(x = duration, y = gross)) + geom_point(aes(color = title_year))
p
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(tidyverse)
library(visNetwork)
movies <- read_csv("imdb.csv")
p <- ggplot(movies, aes(x = budget, y = gross)) + geom_point(aes(color = title_year))
p
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(tidyverse)
library(visNetwork)
movies <- read_csv("imdb.csv")
p <- ggplot(movies, aes(x = title_year, y = gross)) + geom_point(aes(color = content_rating))
p
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(tidyverse)
library(visNetwork)
movies <- read_csv("imdb.csv")
p <- ggplot(movies, aes(x = title_year, y = gross)) + geom_point() + facet_wrap(.~content_rating, ncol = 3)
p
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(tidyverse)
library(visNetwork)
movies <- read_csv("imdb.csv")
p <- ggplot(movies, aes(x = title_year, y = gross)) + geom_point() + facet_wrap( ~ content_rating, ncol = 3)
p
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp()
runApp()
runApp()
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp()
library(tidyverse)
library(ggplot2)
library(graphics)
library(tidyverse)
library(dplyr)
library(GGally)
library(forcats)
df <- read_csv(file="sd.csv")
# select relevant data
# table of every participants ratings
filter_df <- df %>%  filter(partner == 1)
selected_df <- filter_df %>% dplyr::select(iid, sports, tvsports, exercise, dining, museums, art,
hiking, gaming, clubbing, reading, tv, theater, movies, concerts,
music, shopping, yoga)
head(selected_df)
dim(selected_df)
# every matching pair
match_df <- df %>%
dplyr::select(pid, match, sports, tvsports, exercise, dining, museums, art,
hiking, gaming, clubbing, reading, tv, theater, movies, concerts,
music, shopping, yoga) %>%
filter(pid != "NA")
head(match_df)
dim(match_df)
join_df <- left_join(match_df, selected_df, by = c("pid" = "iid"))
join_df <- join_df[complete.cases(join_df), ]
#View(join_df)
diff_df <- join_df %>%
mutate(dsports = abs(sports.x - sports.y),
dtvsports = abs(tvsports.x - tvsports.y),
dexercise = abs(exercise.x - exercise.y),
ddining = abs(dining.x - dining.y),
dmuseums = abs(museums.x - museums.y),
dart = abs(sports.x - art.y),
dhiking = abs(hiking.x - hiking.y),
dgaming = abs(gaming.x - gaming.y),
dclubbing = abs(clubbing.x - clubbing.y),
dreading = abs(reading.x - reading.y),
dtv = abs(tv.x - tv.y),
dtheater = abs(theater.x - theater.y),
dmovies = abs(movies.x - movies.y),
dconcerts = abs(concerts.x - concerts.y),
dmusic = abs(music.x - music.y),
dshopping = abs(shopping.x - shopping.y),
dyoga = abs(yoga.x - yoga.y))
columns_df <- diff_df %>% dplyr::select(match, dsports, dtvsports, dexercise,
ddining, dmuseums, dart, dhiking, dgaming,
dclubbing, dreading, dtv, dtheater,
dmovies, dconcerts, dmusic, dshopping, dyoga)
head(columns_df)
columns_df <- plyr::rename(columns_df,
c("dsports" = "Sports",
"dtvsports" = "T.V. Sports",
"dexercise" = "Exercise",
"ddining" = "Dining",
"dmuseums" = "Museums",
"dart" = "Art",
"dhiking" = "Biking",
"dgaming" =  "Gaming",
"dclubbing" =  "Clubbing",
"dreading" =  "Reading",
"dtv" =  "T.V.",
"dtheater" = "Theater",
"dmovies" = "Movies",
"dconcerts" = "Concerts",
"dmusic" = "Music",
"dshopping" = "Shopping",
"dyoga" =   "Yoga"))
df <- melt(columns_df, id.vars = "match")
df <- plyr::rename(df,
c("dsports" = "Sports"))
# "T.V. Sports" = "dtvsports",
# "Exercise" = "dexercise",
# "Dining" = "ddining",
# "Museums" = "dmuseums",
# "Art" = "dart",
# "Hiking" = "dbiking",
# "Gaming" =  "dgaming",
# "Clubbing" =  "dclubbing",
# "Reading" =  "dreading",
# "Tv" =  "dtv",
# "Theater" = "dtheater",
# "Movies" = "dmovies",
# "Concerts" = "dconcerts",
# "Music" = "dmusic",
# "Shopping" = "dshopping",
# "Yoga" =   "dyoga")
head(df)
df <- df %>%
mutate(match = fct_recode(factor(match),
"Yes" = "1",
"No" = "0"
))
head(df)
#View(plot_data)
pdf("rplot.pdf", width = 16, height = 10, paper = "USr")
ggplot(df, aes(x = variable, y= value)) + geom_point(size = 4, alpha = 0.2, aes(color = match)) +
scale_color_manual(values = c("#AAAAAA", "darkblue")) +
theme(axis.text = element_text(size = 7),
title = element_text(size = 24),
axis.title = element_text(size = 20),
text = element_text(size = 14, face="bold",
color = "darkblue"),
legend.box.background = element_rect(color = "darkblue"),
legend.box.margin = margin(4, 4, 4, 4),
legend.title = element_text(size = 18),
legend.text = element_text(size = 18)) +
labs(x = "Interest") +
labs(title = "Interests and Matches") +
labs(y = "Difference in Interest Levels (0-10)") +
labs(fill = "Match")
dev.off()
?melt
runApp()
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(networkD3)
movies <- read_csv("imdb.csv")
movies <- movies %>% select(content_rating, title_year, gross, budget, imdb_score, duration)
movies <- movies %>% filter(title_year > 1985, content_rating == "PG-13" | content_rating == "G" | content_rating == "R" | content_rating == "PG")
movies <- movies %>% group_by(content_rating) %>%
summarise(mean_gross = mean(gross, na.rm = TRUE) ,
mean_budget = mean(budget, na.rm = TRUE) ,
mean_score = mean(imdb_score, na.rm = TRUE) ,
mean_duration = mean(duration, na.rm = TRUE))
movies <- melt(movies, id.vars = "content_rating")
library(networkD3)
movies <- read_csv("imdb.csv")
movies <- movies %>% select(content_rating, title_year, gross, budget, imdb_score, duration)
movies <- movies %>% filter(title_year > 1985, content_rating == "PG-13" | content_rating == "G" | content_rating == "R" | content_rating == "PG")
movies <- movies %>% group_by(content_rating) %>%
summarise(mean_gross = mean(gross, na.rm = TRUE) ,
mean_budget = mean(budget, na.rm = TRUE) ,
mean_score = mean(imdb_score, na.rm = TRUE) ,
mean_duration = mean(duration, na.rm = TRUE))
movies <- melt(movies, id.vars = "content_rating")
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(networkD3)
movies <- read_csv("imdb.csv")
movies <- movies %>% select(content_rating, title_year, gross, budget, imdb_score, duration)
movies <- movies %>% filter(title_year > 1985, content_rating == "PG-13" | content_rating == "G" | content_rating == "R" | content_rating == "PG")
movies <- movies %>% group_by(content_rating) %>%
summarise(mean_gross = mean(gross, na.rm = TRUE) ,
mean_budget = mean(budget, na.rm = TRUE) ,
mean_score = mean(imdb_score, na.rm = TRUE) ,
mean_duration = mean(duration, na.rm = TRUE))
movies <- melt(movies, id.vars = "content_rating")
movies
runApp()
?select
?checkboxInput
?select
?drop
runApp()
one_of
?one_of
runApp()
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(networkD3)
movies <- read_csv("imdb.csv")
movies <- movies %>% dplyr::select(content_rating, title_year, gross, budget, imdb_score, duration)
if (!input$show_gross) {
movies <- movies %>% select(-one_of(c("gross")))
}
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(networkD3)
movies <- read_csv("imdb.csv")
movies <- movies %>% dplyr::select(content_rating, title_year, gross, budget, imdb_score, duration)
movies <- movies %>% select(-one_of(c("gross")))
movies <- movies %>% select(-one_of(c("budget")))
movies <- movies %>% filter(title_year > 1985, content_rating == "PG-13" | content_rating == "G" | content_rating == "R" | content_rating == "PG")
movies <- movies %>% group_by(content_rating) %>%
summarise(mean_gross = mean(gross, na.rm = TRUE) ,
mean_budget = mean(budget, na.rm = TRUE) ,
mean_score = mean(imdb_score, na.rm = TRUE) ,
mean_duration = mean(duration, na.rm = TRUE))
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(networkD3)
movies <- read_csv("imdb.csv")
movies <- movies %>% dplyr::select(content_rating, title_year, gross, budget, imdb_score, duration)
movies <- movies %>% select(-one_of(c("gross")))
movies <- movies %>% select(-one_of(c("budget")))
movies <- movies %>% filter(budget, title_year > 1985, content_rating == "PG-13" | content_rating == "G" | content_rating == "R" | content_rating == "PG")
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(networkD3)
movies <- read_csv("imdb.csv")
movies <- movies %>% dplyr::select(content_rating, title_year, gross, budget, imdb_score, duration)
movies <- movies %>% filter(budget, title_year > 1985, content_rating == "PG-13" | content_rating == "G" | content_rating == "R" | content_rating == "PG")
movies <- movies %>% group_by(content_rating) %>%
summarise(mean_gross = mean(gross, na.rm = TRUE) ,
mean_budget = mean(budget, na.rm = TRUE) ,
mean_score = mean(imdb_score, na.rm = TRUE) ,
mean_duration = mean(duration, na.rm = TRUE))
movies <- melt(movies, id.vars = "content_rating")
p <- ggplot(movies, aes(x = content_rating, value)) +
geom_bar(aes(fill = variable), position = "dodge", stat="identity")
runApp()
?scale
library(ggplot2)
library(dplyr)
library(igraph)
library(ggraph)
library(networkD3)
movies <- read_csv("imdb.csv")
movies <- movies %>% dplyr::select(content_rating, title_year, gross, budget, imdb_score, duration)
movies <- movies %>% select(-one_of(c("gross")))
movies <- movies %>% select(-one_of(c("budget")))
movies <- movies %>% filter(budget, title_year > 1985, content_rating == "PG-13" | content_rating == "G" | content_rating == "R" | content_rating == "PG")
runApp()
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp('~/Documents/GitHub/315_m17_interactive_project')
runApp()
runApp('~/Documents/GitHub/315_m17_interactive_project')
