labs(title = "Interests and Matches") +
labs(y = "Difference in Interest Levels (0-10)") +
labs(fill = "Match")
dev.off()
library(tidyverse)
library(ggplot2)
library(dplyr)
library(GGally)
library(network)
library(sna)
library(ggplot2)
library(geomnet)
library(forcats)
library(igraph)
library(ggraph)
movies <- read_csv("imdb.csv")
grossing <- movies %>% dplyr::select(director_name, gross)
grossing <- grossing[complete.cases(grossing), ]
avg_gross <- grossing %>% group_by(director_name) %>%
dplyr::summarise(mean_gross = mean(gross))
head(avg_gross)
gross  <- avg_gross[order(avg_gross$mean_gross,decreasing = TRUE),]
gross <- head(gross,20)
movies <- movies %>% dplyr::select(director_name, actor_1_name, actor_2_name, actor_3_name)
movies <-merge(x = movies, y = gross, by = "director_name", all.x = TRUE)
head(movies)
movie_edges <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
movie_vertices <- as.data.frame(matrix(0, ncol = 1, nrow = 0))
movie_edges <- setNames(movie_edges, c("director","actor"))
#
#
#    for(i in 1:nrow(movies)) {
#      movie <- movies[i,]
#
#      director <- movie$director_name
#      movie_vertices[nrow(movie_vertices) + 1,] = director
#
#      actor1 <- movie$actor_1_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor1)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor1)
#
#      actor2 <- movie$actor_2_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor2)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor2)
#
#      actor3 <- movie$actor_3_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor3)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor3)
#
#
#
#    }
# Mnet <- fortify(as.edgedf(movie_edges), data = movies)
# Mnet <- Mnet %>% dplyr::select(from_id, to_id)
#
#
# movie_vertices <- unique(movie_vertices[,1])
# movie_graph <- graph_from_data_frame(d = Mnet, directed = FALSE, vertices = NULL)
# network_kk <- ggraph(movie_graph, layout = "kk") + geom_edge_link()
#
# network_kk
#
?merge
?left_join
library(tidyverse)
library(ggplot2)
library(dplyr)
library(GGally)
library(network)
library(sna)
library(ggplot2)
library(geomnet)
library(forcats)
library(igraph)
library(ggraph)
movies <- read_csv("imdb.csv")
grossing <- movies %>% dplyr::select(director_name, gross)
grossing <- grossing[complete.cases(grossing), ]
avg_gross <- grossing %>% group_by(director_name) %>%
dplyr::summarise(mean_gross = mean(gross))
head(avg_gross)
gross  <- avg_gross[order(avg_gross$mean_gross,decreasing = TRUE),]
gross <- head(gross,20)
movies <- movies %>% dplyr::select(director_name, actor_1_name, actor_2_name, actor_3_name)
movies <-left_join(x = movies, y = gross, by = "director_name")
head(movies)
movie_edges <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
movie_vertices <- as.data.frame(matrix(0, ncol = 1, nrow = 0))
movie_edges <- setNames(movie_edges, c("director","actor"))
#
#
#    for(i in 1:nrow(movies)) {
#      movie <- movies[i,]
#
#      director <- movie$director_name
#      movie_vertices[nrow(movie_vertices) + 1,] = director
#
#      actor1 <- movie$actor_1_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor1)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor1)
#
#      actor2 <- movie$actor_2_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor2)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor2)
#
#      actor3 <- movie$actor_3_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor3)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor3)
#
#
#
#    }
# Mnet <- fortify(as.edgedf(movie_edges), data = movies)
# Mnet <- Mnet %>% dplyr::select(from_id, to_id)
#
#
# movie_vertices <- unique(movie_vertices[,1])
# movie_graph <- graph_from_data_frame(d = Mnet, directed = FALSE, vertices = NULL)
# network_kk <- ggraph(movie_graph, layout = "kk") + geom_edge_link()
#
# network_kk
#
library(tidyverse)
library(ggplot2)
library(dplyr)
library(GGally)
library(network)
library(sna)
library(ggplot2)
library(geomnet)
library(forcats)
library(igraph)
library(ggraph)
movies <- read_csv("imdb.csv")
grossing <- movies %>% dplyr::select(director_name, gross)
grossing <- grossing[complete.cases(grossing), ]
avg_gross <- grossing %>% group_by(director_name) %>%
dplyr::summarise(mean_gross = mean(gross))
head(avg_gross)
gross  <- avg_gross[order(avg_gross$mean_gross,decreasing = TRUE),]
gross <- head(gross,20)
movies <- movies %>% dplyr::select(director_name, actor_1_name, actor_2_name, actor_3_name)
movies <-left_join(x = movies, y = gross, by = "director_name")
movies <- movies[complete.cases(movies), ]
movies
movie_edges <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
movie_vertices <- as.data.frame(matrix(0, ncol = 1, nrow = 0))
movie_edges <- setNames(movie_edges, c("director","actor"))
#
#
#    for(i in 1:nrow(movies)) {
#      movie <- movies[i,]
#
#      director <- movie$director_name
#      movie_vertices[nrow(movie_vertices) + 1,] = director
#
#      actor1 <- movie$actor_1_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor1)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor1)
#
#      actor2 <- movie$actor_2_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor2)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor2)
#
#      actor3 <- movie$actor_3_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor3)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor3)
#
#
#
#    }
# Mnet <- fortify(as.edgedf(movie_edges), data = movies)
# Mnet <- Mnet %>% dplyr::select(from_id, to_id)
#
#
# movie_vertices <- unique(movie_vertices[,1])
# movie_graph <- graph_from_data_frame(d = Mnet, directed = FALSE, vertices = NULL)
# network_kk <- ggraph(movie_graph, layout = "kk") + geom_edge_link()
#
# network_kk
#
?head
library(tidyverse)
library(ggplot2)
library(dplyr)
library(GGally)
library(network)
library(sna)
library(ggplot2)
library(geomnet)
library(forcats)
library(igraph)
library(ggraph)
movies <- read_csv("imdb.csv")
grossing <- movies %>% dplyr::select(director_name, gross)
grossing <- grossing[complete.cases(grossing), ]
avg_gross <- grossing %>% group_by(director_name) %>%
dplyr::summarise(mean_gross = mean(gross))
head(avg_gross)
gross  <- avg_gross[order(avg_gross$mean_gross,decreasing = TRUE),]
gross <- head(gross, n = 20)
movies <- movies %>% dplyr::select(director_name, actor_1_name, actor_2_name, actor_3_name)
movies <-left_join(x = movies, y = gross, by = "director_name")
movies <- movies[complete.cases(movies), ]
movies
movie_edges <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
movie_vertices <- as.data.frame(matrix(0, ncol = 1, nrow = 0))
movie_edges <- setNames(movie_edges, c("director","actor"))
#
#
#    for(i in 1:nrow(movies)) {
#      movie <- movies[i,]
#
#      director <- movie$director_name
#      movie_vertices[nrow(movie_vertices) + 1,] = director
#
#      actor1 <- movie$actor_1_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor1)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor1)
#
#      actor2 <- movie$actor_2_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor2)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor2)
#
#      actor3 <- movie$actor_3_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor3)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor3)
#
#
#
#    }
# Mnet <- fortify(as.edgedf(movie_edges), data = movies)
# Mnet <- Mnet %>% dplyr::select(from_id, to_id)
#
#
# movie_vertices <- unique(movie_vertices[,1])
# movie_graph <- graph_from_data_frame(d = Mnet, directed = FALSE, vertices = NULL)
# network_kk <- ggraph(movie_graph, layout = "kk") + geom_edge_link()
#
# network_kk
#
gross
library(tidyverse)
library(ggplot2)
library(dplyr)
library(GGally)
library(network)
library(sna)
library(ggplot2)
library(geomnet)
library(forcats)
library(igraph)
library(ggraph)
movies <- read_csv("imdb.csv")
grossing <- movies %>% dplyr::select(director_name, gross)
grossing <- grossing[complete.cases(grossing), ]
avg_gross <- grossing %>% group_by(director_name) %>%
dplyr::summarise(mean_gross = mean(gross))
head(avg_gross)
gross  <- avg_gross[order(avg_gross$mean_gross,decreasing = TRUE),]
gross <- head(gross, n = 20)
gross
movies <- movies %>% dplyr::select(director_name, actor_1_name, actor_2_name, actor_3_name)
movies <-left_join(x = movies, y = gross, by = "director_name")
movies <- movies[complete.cases(movies), ]
movies
movie_edges <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
movie_vertices <- as.data.frame(matrix(0, ncol = 1, nrow = 0))
movie_edges <- setNames(movie_edges, c("director","actor"))
#
#
#    for(i in 1:nrow(movies)) {
#      movie <- movies[i,]
#
#      director <- movie$director_name
#      movie_vertices[nrow(movie_vertices) + 1,] = director
#
#      actor1 <- movie$actor_1_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor1)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor1)
#
#      actor2 <- movie$actor_2_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor2)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor2)
#
#      actor3 <- movie$actor_3_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor3)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor3)
#
#
#
#    }
# Mnet <- fortify(as.edgedf(movie_edges), data = movies)
# Mnet <- Mnet %>% dplyr::select(from_id, to_id)
#
#
# movie_vertices <- unique(movie_vertices[,1])
# movie_graph <- graph_from_data_frame(d = Mnet, directed = FALSE, vertices = NULL)
# network_kk <- ggraph(movie_graph, layout = "kk") + geom_edge_link()
#
# network_kk
#
library(tidyverse)
library(ggplot2)
library(dplyr)
library(GGally)
library(network)
library(sna)
library(ggplot2)
library(geomnet)
library(forcats)
library(igraph)
library(ggraph)
movies <- read_csv("imdb.csv")
grossing <- movies %>% dplyr::select(director_name, gross)
grossing <- grossing[complete.cases(grossing), ]
avg_gross <- grossing %>% group_by(director_name) %>%
dplyr::summarise(mean_gross = mean(gross))
head(avg_gross)
gross  <- avg_gross[order(avg_gross$mean_gross,decreasing = TRUE),]
gross <- head(gross, n = 20)
gross
movies <- movies %>% dplyr::select(director_name, actor_1_name, actor_2_name, actor_3_name)
movies <-left_join(x = gross, y = movies, by = "director_name")
movies <- movies[complete.cases(movies), ]
movies
movie_edges <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
movie_vertices <- as.data.frame(matrix(0, ncol = 1, nrow = 0))
movie_edges <- setNames(movie_edges, c("director","actor"))
#
#
#    for(i in 1:nrow(movies)) {
#      movie <- movies[i,]
#
#      director <- movie$director_name
#      movie_vertices[nrow(movie_vertices) + 1,] = director
#
#      actor1 <- movie$actor_1_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor1)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor1)
#
#      actor2 <- movie$actor_2_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor2)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor2)
#
#      actor3 <- movie$actor_3_name
#      movie_edges[nrow(movie_edges) + 1,] = c(director,actor3)
#      movie_vertices[nrow(movie_vertices) + 1,] = c(actor3)
#
#
#
#    }
# Mnet <- fortify(as.edgedf(movie_edges), data = movies)
# Mnet <- Mnet %>% dplyr::select(from_id, to_id)
#
#
# movie_vertices <- unique(movie_vertices[,1])
# movie_graph <- graph_from_data_frame(d = Mnet, directed = FALSE, vertices = NULL)
# network_kk <- ggraph(movie_graph, layout = "kk") + geom_edge_link()
#
# network_kk
#
library(tidyverse)
library(ggplot2)
library(dplyr)
library(GGally)
library(network)
library(sna)
library(ggplot2)
library(geomnet)
library(forcats)
library(igraph)
library(ggraph)
movies <- read_csv("imdb.csv")
grossing <- movies %>% dplyr::select(director_name, gross)
grossing <- grossing[complete.cases(grossing), ]
avg_gross <- grossing %>% group_by(director_name) %>%
dplyr::summarise(mean_gross = mean(gross))
head(avg_gross)
gross  <- avg_gross[order(avg_gross$mean_gross,decreasing = TRUE),]
gross <- head(gross, n = 20)
gross
movies <- movies %>% dplyr::select(director_name, actor_1_name, actor_2_name, actor_3_name)
movie_edges <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
movie_vertices <- as.data.frame(matrix(0, ncol = 1, nrow = 0))
movie_edges <- setNames(movie_edges, c("director","actor"))
for(i in 1:nrow(movies)) {
movie <- movies[i,]
director <- movie$director_name
movie_vertices[nrow(movie_vertices) + 1,] = director
actor1 <- movie$actor_1_name
movie_edges[nrow(movie_edges) + 1,] = c(director,actor1)
movie_vertices[nrow(movie_vertices) + 1,] = c(actor1)
actor2 <- movie$actor_2_name
movie_edges[nrow(movie_edges) + 1,] = c(director,actor2)
movie_vertices[nrow(movie_vertices) + 1,] = c(actor2)
actor3 <- movie$actor_3_name
movie_edges[nrow(movie_edges) + 1,] = c(director,actor3)
movie_vertices[nrow(movie_vertices) + 1,] = c(actor3)
}
# Mnet <- fortify(as.edgedf(movie_edges), data = movies)
# Mnet <- Mnet %>% dplyr::select(from_id, to_id)
#
#
# movie_vertices <- unique(movie_vertices[,1])
# movie_graph <- graph_from_data_frame(d = Mnet, directed = FALSE, vertices = NULL)
# network_kk <- ggraph(movie_graph, layout = "kk") + geom_edge_link()
#
# network_kk
#
Mnet <- fortify(as.edgedf(movie_edges), data = movies)
Mnet <- Mnet %>% dplyr::select(from_id, to_id)
head(Mnet)
Mnet <- setNames(Mnet, c("director","actor"))
head(Mnet)
movies <-left_join(x = gross, y = Mnet, by = "director_name")
Mnet <- setNames(Mnet, c("director_name","actor"))
movies <-left_join(x = gross, y = Mnet, by = "director_name")
head(movies)
movies
unique(movies)
?graph_from_data_frame
library(tidyverse)
library(ggplot2)
library(dplyr)
library(GGally)
library(network)
library(sna)
library(ggplot2)
library(geomnet)
library(forcats)
library(igraph)
library(ggraph)
movies <- read_csv("imdb.csv")
grossing <- movies %>% dplyr::select(director_name, gross)
grossing <- grossing[complete.cases(grossing), ]
avg_gross <- grossing %>% group_by(director_name) %>%
dplyr::summarise(mean_gross = mean(gross))
head(avg_gross)
gross  <- avg_gross[order(avg_gross$mean_gross,decreasing = TRUE),]
gross <- head(gross, n = 20)
movies <- movies %>% dplyr::select(director_name, actor_1_name, actor_2_name, actor_3_name)
movies <- movies[complete.cases(movies), ]
movie_edges <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
movie_vertices <- as.data.frame(matrix(0, ncol = 1, nrow = 0))
movie_edges <- setNames(movie_edges, c("director","actor"))
for(i in 1:nrow(movies)) {
movie <- movies[i,]
director <- movie$director_name
movie_vertices[nrow(movie_vertices) + 1,] = director
actor1 <- movie$actor_1_name
movie_edges[nrow(movie_edges) + 1,] = c(director,actor1)
movie_vertices[nrow(movie_vertices) + 1,] = c(actor1)
actor2 <- movie$actor_2_name
movie_edges[nrow(movie_edges) + 1,] = c(director,actor2)
movie_vertices[nrow(movie_vertices) + 1,] = c(actor2)
actor3 <- movie$actor_3_name
movie_edges[nrow(movie_edges) + 1,] = c(director,actor3)
movie_vertices[nrow(movie_vertices) + 1,] = c(actor3)
}
Mnet <- fortify(as.edgedf(movie_edges), data = movies)
Mnet <- Mnet %>% dplyr::select(from_id, to_id)
movie_graph <- graph_from_edge_list(d = Mnet, directed = FALSE, vertices = NULL)
?graph_from_edgelist
library(tidyverse)
library(ggplot2)
library(dplyr)
library(GGally)
library(network)
library(sna)
library(ggplot2)
library(geomnet)
library(forcats)
library(igraph)
library(ggraph)
movies <- read_csv("imdb.csv")
grossing <- movies %>% dplyr::select(director_name, gross)
grossing <- grossing[complete.cases(grossing), ]
avg_gross <- grossing %>% group_by(director_name) %>%
dplyr::summarise(mean_gross = mean(gross))
head(avg_gross)
gross  <- avg_gross[order(avg_gross$mean_gross,decreasing = TRUE),]
gross <- head(gross, n = 20)
movies <- movies %>% dplyr::select(director_name, actor_1_name, actor_2_name, actor_3_name)
movies <- movies[complete.cases(movies), ]
movie_edges <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
movie_vertices <- as.data.frame(matrix(0, ncol = 1, nrow = 0))
movie_edges <- setNames(movie_edges, c("director","actor"))
for(i in 1:nrow(movies)) {
movie <- movies[i,]
director <- movie$director_name
movie_vertices[nrow(movie_vertices) + 1,] = director
actor1 <- movie$actor_1_name
movie_edges[nrow(movie_edges) + 1,] = c(director,actor1)
movie_vertices[nrow(movie_vertices) + 1,] = c(actor1)
actor2 <- movie$actor_2_name
movie_edges[nrow(movie_edges) + 1,] = c(director,actor2)
movie_vertices[nrow(movie_vertices) + 1,] = c(actor2)
actor3 <- movie$actor_3_name
movie_edges[nrow(movie_edges) + 1,] = c(director,actor3)
movie_vertices[nrow(movie_vertices) + 1,] = c(actor3)
}
Mnet <- fortify(as.edgedf(movie_edges), data = movies)
Mnet <- Mnet %>% dplyr::select(from_id, to_id)
movie_graph <- graph_from_edgelist(d = Mnet, directed = FALSE, vertices = NULL)
?
sadf
shiny::runApp('Documents/GitHub/315_m17_interactive_project')
runApp('Documents/GitHub/315_m17_interactive_project')
runApp('Documents/GitHub/315_m17_interactive_project')
?as.edgedf
runApp('Documents/GitHub/315_m17_interactive_project')
